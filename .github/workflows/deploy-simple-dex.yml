name: Deploy Simple DEX to GitHub Pages

on:
  push:
    branches: [main]
    paths:
      - 'apps/simple-dex/**'
  pull_request:
    branches: [main]
    paths:
      - 'apps/simple-dex/**'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages-simple-dex'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'apps/simple-dex/') || contains(github.event.head_commit.added, 'apps/simple-dex/')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check for changes in Simple DEX
        id: check-changes
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');

            // Get the list of changed files
            let changedFiles;
            if (context.eventName === 'push') {
              // For push events, compare with the previous commit
              changedFiles = execSync('git diff --name-only HEAD~1 HEAD', { encoding: 'utf8' });
            } else {
              // For PR events, compare with the base branch
              changedFiles = execSync(`git diff --name-only origin/${context.payload.pull_request.base.ref}...HEAD`, { encoding: 'utf8' });
            }

            console.log('Changed files:', changedFiles);

            // Check if any files in apps/simple-dex/ were changed
            const hasSimpleDexChanges = changedFiles.split('\n').some(file => 
              file.startsWith('apps/simple-dex/')
            );

            console.log('Has Simple DEX changes:', hasSimpleDexChanges);
            core.setOutput('has-changes', hasSimpleDexChanges);

            return hasSimpleDexChanges;

      - name: Build Simple DEX
        if: steps.check-changes.outputs.has-changes == 'true'
        run: |
          cd apps/simple-dex
          pnpm build
        env:
          NODE_ENV: production

      - name: Setup Pages
        if: steps.check-changes.outputs.has-changes == 'true' && github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4

      - name: Upload artifact
        if: steps.check-changes.outputs.has-changes == 'true' && github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/simple-dex/dist

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}simple-dex/
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment on commit
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = require('@actions/github');

            // Create a comment on the commit
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `üöÄ Simple DEX has been deployed!\n\nüì± **Live App**: ${{ steps.deployment.outputs.page_url }}simple-dex/\n\n‚úÖ Build completed successfully at ${new Date().toISOString()}`
            });

      - name: Update deployment status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = require('@actions/github');

            const status = '${{ job.status }}' === 'success' ? 'success' : 'failure';
            const description = status === 'success' 
              ? 'Simple DEX deployed successfully' 
              : 'Simple DEX deployment failed';

            // Create a deployment status
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment?.id || 0,
              state: status,
              description: description,
              environment_url: status === 'success' ? `${{ steps.deployment.outputs.page_url }}simple-dex/` : undefined
            });

  # Notification job
  notify:
    if: always() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build, deploy]

    steps:
      - name: Send notification
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = require('@actions/github');

            const buildStatus = '${{ needs.build.result }}';
            const deployStatus = '${{ needs.deploy.result }}';

            let emoji = '‚úÖ';
            let status = 'Success';
            let message = 'Simple DEX has been successfully built and deployed!';

            if (buildStatus === 'failure' || deployStatus === 'failure') {
              emoji = '‚ùå';
              status = 'Failed';
              message = 'Simple DEX deployment failed. Please check the logs.';
            } else if (buildStatus === 'skipped') {
              emoji = '‚è≠Ô∏è';
              status = 'Skipped';
              message = 'No changes detected in Simple DEX, deployment skipped.';
            }

            console.log(`${emoji} ${status}: ${message}`);

            // You can add additional notification logic here
            // For example, sending to Slack, Discord, or email
